service: new-employee-portal-app
provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: us-east-1
  environment:
    DYNAMODB_TABLE_NAME: ${self:custom.employeeTableName}
custom:
  employeeTableName: employee-table-${self:provider.stage}
plugins:
  - serverless-iam-roles-per-function
functions:
    #Create Experience Details      
  createPost:
    handler: api.createExperience
    name: create-post
    memorySize: 128
    timeout: 5
    events:
      - http:
          path: experienceInfo
          method: POST
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:PutItem"
        Resource:
          Fn::GetAtt:
            - PostsTable
            - Arn

    #Update Experience Details
  updatePost:
    handler: api.updateExperience
    name: update-post
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: experienceInfo/{employeeId}
          method: PUT
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:UpdateItem"
        Resource:
          Fn::GetAtt:
            - PostsTable
            - Arn

  #Get Experience Details Based on EmpID
  getPost:
    handler: api.getExperience
    name: get-post
    memorySize: 128
    timeout: 5
    events:
      - http:
          path: employeeExperienceInfo/{employeeId}
          method: GET
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:GetItem"
        Resource:
          Fn::GetAtt:
            - PostsTable
            - Arn
  
  #Get All Experience Details Based on EmpID
  getAllPost:
    handler: api.getAllExperience
    name: get-all-post
    memorySize: 128
    timeout: 5
    events:
      - http:
          path: employeesExperienceInfo
          method: GET
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:Scan"
        Resource:
          Fn::GetAtt:
            - PostsTable
            - Arn
resources:
  Resources:
    PostsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.employeeTableName}
        AttributeDefinitions:
          - AttributeName: EmpId
            AttributeType: S
        KeySchema:
          - AttributeName: EmpId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
